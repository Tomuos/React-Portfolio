==== ./src/components/AboutMe/AboutMe.css ====
#about {
  background-color: #1A0064;
  color: #fff;
  padding: 8rem 0;
  background-image: url('../../../public/images/wallpaper-sun-stars.png');
  background-repeat: repeat;
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}

#about .content {
  max-width: 80%;
  margin: 0 auto;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 10px;
  backdrop-filter: blur(10px);
}

.gradient-heading-container {
  background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
  border-radius: 10px;
  text-align: center;
  padding: 1rem 0;
  margin: auto;
  width: 100%;
}

.gradient-heading {
  color: white;
  font-size: 5rem;
  display: inline-block;
  margin: 0;
}

#about h3 {
  font-size: 2.5rem;
  color: aquamarine;
  font-weight: 700;
  text-align: center;
  padding: 2rem 0;
}

#about p {
  font-size: 2rem;
  font-weight: 400;
  text-align: center;
  padding: 2rem 0;
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  #about {
    padding: 4rem 1rem; /* Reduce padding */
  }

  .gradient-heading {
    font-size: 2.5rem; /* Adjust header font size */
  }

  #about .content {
    max-width: 95%; /* Increase content width */
  }

  .about-me-text p {
    font-size: 1.2rem; /* Reduce paragraph text size */
  }

  .gallery ul {
    flex-direction: column; /* Stack images vertically */
  }

  .gallery img {
    width: 80%; /* Increase logo size */
    margin: 0 auto 1rem; /* Center and add space below logos */
  }

  /* Adjust the pizza and Zelda images */
  .hobbies-gallery {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); /* Responsive grid */
  }

  .hobby-item img, .hobby-item2 img {
    width: 100%; /* Full width of their container */
    margin-bottom: 0.5rem; /* Space between image and description */
  }

  .hobby-item span, .hobby-item2 span {
    display: block; /* Ensure descriptions are block level */
    text-align: center; /* Center text */
    font-size: 1rem; /* Adjust description text size */
    opacity: 1; /* Always visible */
    visibility: visible;
    transform: none; /* Remove any transforms */
    position: relative; /* Reset position */
    background-color: transparent; /* Remove background */
    color: #fff; /* Text color */
  }
}==== ./src/components/AboutMe/AboutMe.js ====
// Example: In your src/components/AboutMe.js
import React from 'react';
import './AboutMe.css';

export const AboutMe = () => {
  return (
    <section id="about" className="hidden">
    <div className="content">
      <section id="about-me" className="about-me-section">
      <div className="gradient-heading-container">
      <h1 className="gradient-heading">About Me</h1>
      </div>
      <div className="about-me-content">
        
        <div className="about-me-text">
          <p>
            Hello, I'm Tom! I'm a developer with a focus on front-end technologies like React, HTML, and CSS. 
            I have a deep-rooted passion for coding and love taking on new challenges to expand my skill set.
          </p>
          
          <p>
            I'm currently looking for new job opportunities where I can bring my unique blend of skills and 
            passion to a forward-thinking company.
          </p>
        </div>
        
        <div className="about-me-image">
  <img src="/images/Tom.jpg" alt="Tom" className="cover-image"/>
  
</div>
     
      </div>

    </section>
  

      <h3>Coder & Tech Enthusiast üíª</h3>
      <p>
        I'm a full-stack developer with a passion for creating beautiful, functional and accessible web applications. I have a keen interest in the latest technologies and enjoy learning new skills.
      </p>      
      <div className="gallery">
        <ul>
          <li>
            <a href="https://www.meetup.com/brum_js/" className="img-container">
              <img src="images/brumjslogo.webp" alt="Brum.js Logo" width="450" height="250" />
            </a>
          </li>
          <li>
            <a href="https://conf.techmids.io/" className="img-container">
              <img src="images/Techmidslogo.png" alt="Techmids Logo" width="450" height="250" />
            </a>
          </li>
        </ul>
      </div>
      <div id="familySection">
        <h3>Family Man üë®‚Äçüë¶‚Äçüë¶</h3>
        <p>Dad to two young boys. We love exploring the great outdoors.</p>
        <div className="container">
          <div className="box portrait">
              <img src="images/benFishing.jpg" alt="Ben fishing"/>
              <span>Fishing</span>
          </div>
          <div className="box landscape">
              <img src="images/ducks.jpg" alt="Boys and ducks"/>
              <span>Feeding time</span>
          </div>
          <div className="box landscape">
              <img src="images/theBoys.jpg" alt="The boys in the woods"/>
              <span>The woods</span>
          </div>
          <div className="box portrait">
              <img src="images/sunflowerBoys.jpg" alt="Boys with sunflowers"/>
              <span>Sunflowers</span>
          </div>
        </div>
          <p>The boys love the outdoors and occasionally they become right posers</p>
        </div>

        <div id="hobbiesSection">
          <h3>Hobbies and Funtimes</h3>
          <p>
            I also love hosting pizza parties and gaming ‚Äî the new Zelda game TOTK is my current favorite!
          </p>
          <div className="hobbies-gallery">
          <div className="hobby-item">
            <img src="/images/crispy.jpg" alt="Crispy Pizza" className="hobby-image" />
            <span>Crispy Pizza so tasty!</span>
          </div>
          <div className="hobby-item">
            <img src="/images/ooni.jpg" alt="Ooni Pizza Oven" className="hobby-image" />
            <span>Ooni Pizza Oven, best purchase ever</span>
          </div>
          <div className="hobby-item">
            <img src="/images/nduja.jpg" alt="Nduja Pizza" className="hobby-image" />
            <span>Nduja Pizza bit of oomph</span>
          </div>
          <div className="hobby-item">
            <img src="/images/sweetcorn.jpg" alt="Sweetcorn Pizza" className="hobby-image" />
            <span>Cheese ham and Sweetcorn Pizza</span>
          </div>
        </div>

        <div className="hobbies-gallery">
          <div className="hobby-item2">
            <img src="/images/Totk1.jpg" alt="Link using the ascend ability" className="hobby-image" />
            <span>Link Ascending</span>
          </div>
          <div className="hobby-item2">
            <img src="/images/Totk5.webp" alt="Link fighting a construct" className="hobby-image" />
            <span>Link fighting a construct</span>
          </div>
          <div className="hobby-item2">
            <img src="/images/Totk3.jpg" alt="Link at Lookout Landing" className="hobby-image" />
            <span>Link at Lookout Landing</span>
          </div>
          <div className="hobby-item2">
            <img src="/images/Totk4.webp" alt="Link on his Hover Bike" className="hobby-image" />
            <span>Link on his Hover Bike</span>
          </div>
        </div>

        </div>
      </div>
    </section>
  );
};
==== ./src/components/Contact/Contact.css ====
#contact {
    background-color: #1A0064;
    color: #fff;
    padding: 5rem 0;
    background-image: url('../../../public/images/wallpaper-meteor-stars.png');
    background-repeat: repeat;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
}


/* #contact h1 {
    font-size: 5rem;
    background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
    border-radius: 10px;
    font-weight: 700;
    text-align: center;
    padding: 2rem 0;
} */
    

#contact p {
    font-size: 1.5rem;
    font-weight: 400;
    text-align: center;
    padding: 2rem 0;
}

.contact-container {
    max-width: 60%;  /* Limits the content width to 80% */
    margin: 0 auto;  /* Centers the content horizontally */
    padding: 2rem; /* Adds padding around the content */
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.2); /* Semi-transparent white background */
    border-radius: 10px; /* Rounded corners */
    backdrop-filter: blur(10px); /* Blurred background effect */
}

.gradient-heading-container {
    background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
    border-radius: 10px;
    text-align: center;
    padding: 1rem 0;
    margin: auto; /* Center the container */
    width: 100%; /* Fill the entire width of the section */
  }
  
  .gradient-heading {
    color: white;
    font-size: 5rem;
    display: inline-block; /* Allows the text to only take up as much space as it needs */
    margin: 0; /* Remove any default margin */
  }

  .form-container {
    width: 80%; /* Set the width of the container */
    margin: auto; /* Center the container horizontally */
    padding: 2rem; /* Add some padding around the form */
  }
  
  /* Style the form elements */
  form input, form textarea {
    width: 100%; /* Make input and textarea elements fill the container */
    margin-bottom: 1rem; /* Add space between the elements */
    padding: 0.5rem; /* Add some padding */
  }
  
  /* Optionally, style the submit button */
  form input[type="submit"] {
    background-color: rgb(0, 140, 255); /* Example button color */
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    cursor: pointer;
  }
  ==== ./src/components/Contact/Contact.js ====
import React, { useRef } from 'react';
import emailjs from '@emailjs/browser';
import './Contact.css';

export const Contact = () => {
  const form = useRef();

  const sendEmail = (e) => {
    e.preventDefault();

    emailjs.sendForm('service_f2l4pyl', 'template_7dnm7pu', form.current, 'mHDzw8z6c4aFmP9je')
      .then((result) => {
          console.log(result.text);
      }, (error) => {
          console.log(error.text);
      });
  };

  return (
    <section id="contact">
      <div className="contact-container"> {/* Use the new container class here */}
      <div className="gradient-heading-container">
        <h1 className="gradient-heading">Contact</h1>
      </div>
      
        <form ref={form} onSubmit={sendEmail}>
          <label htmlFor="user_name">Name</label>
          <input type="text" name="user_name" id="user_name" />
          <label htmlFor="user_email">Email</label>
          <input type="email" name="user_email" id="user_email" />
          <label htmlFor="message">Message</label>
          <textarea name="message" id="message" />
          <input type="submit" value="Send" />
        </form>
      </div>
    </section>
  );
};

export default Contact;
==== ./src/components/Galaxy/Galaxy.css ====
#galaxy {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  animation: fadeIn 2s forwards;
}

.message {
  color: white;
  font-size: 3rem; /* Large font size for larger screens */
}

.message h1 {
  background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: 2em; /* Adjust heading size */
  text-align: center;
}

img {
  max-width: 100%;
  height: auto;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}

@media screen and (max-width: 768px) {
  .message {
    font-size: 1.5rem; /* Smaller font size for mobile devices */
  }

  .message h1 {
    font-size: 1.5em; /* Adjust heading size for mobile devices */
  }
}

@media screen and (max-width: 768px) {
  .overlay {
    flex-direction: column;
  }

  .message, .pillars {
    margin: 10px 0; /* Add some margin for spacing */
  }
  img {
    max-width: 80%;
    height: auto;}
}==== ./src/components/Galaxy/Galaxy.js ====
import React, { useEffect, useRef } from 'react';
import * as THREE from 'three';
import './Galaxy.css';

export const Galaxy = () => {
  const galaxyRef = useRef(null);

  useEffect(() => {
    // Initialize scene, camera, and renderer
    const scene = new THREE.Scene();
    scene.background = new THREE.Color(0x1A0064);
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    
    // Append renderer to the DOM
    if (galaxyRef.current) {
      galaxyRef.current.appendChild(renderer.domElement);
    }

    // Handle window resize
    const updateCamera = () => {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    };
    window.addEventListener('resize', updateCamera);

    // Cleanup function
    const cleanup = () => {
      window.removeEventListener('resize', updateCamera);
      galaxyRef.current.removeChild(renderer.domElement);
    };

    // Create particles
    const particles = createParticles();
    scene.add(particles);

    // Create stars
    const stars = createStars();
    stars.forEach(star => scene.add(star));

    // Animation loop
    const animate = () => {
      requestAnimationFrame(animate);
      particles.rotation.x += 0.0003;
      particles.rotation.y += 0.0003;
      renderer.render(scene, camera);
    };
    animate();

    // Cleanup on component unmount
    return cleanup;
  }, []);

  // Function to create particles
  function createParticles() {
    const canvas = document.createElement('canvas');
    canvas.width = 64;
    canvas.height = 64;
    const context = canvas.getContext('2d');
    context.beginPath();
    context.arc(32, 32, 30, 0, 2 * Math.PI);
    context.fillStyle = 'white';
    context.fill();

    const texture = new THREE.CanvasTexture(canvas);
    const material = new THREE.PointsMaterial({
      size: 0.02,
      vertexColors: true,
      map: texture,
      transparent: true,
    });

    const geometry = new THREE.BufferGeometry();
    const positions = new Float32Array(2000 * 3);
    const colors = new Float32Array(2000 * 3);

    for (let i = 0; i < positions.length; i += 3) {
      positions[i] = (Math.random() - 0.5) * 10;
      positions[i + 1] = (Math.random() - 0.5) * 10;
      positions[i + 2] = (Math.random() - 0.5) * 10;

      const color = new THREE.Color(Math.random(), Math.random(), Math.random());
      colors[i] = color.r;
      colors[i + 1] = color.g;
      colors[i + 2] = color.b;
    }

    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));
    geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));

    return new THREE.Points(geometry, material);
  }

  // Function to create stars
  function createStars() {
    const starTexture = new THREE.TextureLoader().load('/images/lensflare.png');
    const stars = [];
    const numStars = 1000;

    for (let i = 0; i < numStars; i++) {
      const starMaterial = new THREE.SpriteMaterial({ map: starTexture });
      const star = new THREE.Sprite(starMaterial);
      star.position.set((Math.random() - 0.5) * 20, (Math.random() - 0.5) * 20, (Math.random() - 0.5) * 20);
      star.scale.set(0.1, 0.1, 0.1);
      stars.push(star);
    }

    return stars;
  }

  return (
    <section id="home" className="flex justify-center items-center relative">
      <div style={{ height: '100vh', overflow: 'hidden' }}>
        <div ref={galaxyRef} className="galaxy-canvas" />
        <div className="overlay">
          <img src="/images/pillarsofTom.png" alt="Pillars of Tom" className="pillars" />
          <div className="message">
            <h1>Hello and welcome</h1>
            <p>You have reached Tom's Dev space</p>
            <p>My universe of code üòÄ</p>
          </div>
        </div>
      </div>
    </section>
  );
};
==== ./src/components/MyProjects/MyProjects.css ====
#projects {
    background-color: #1A0064;
    color: #fff;
    background-image: url('../../../public/images/wallpaper-galaxy-stars.png');
    background-repeat: repeat;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    padding: 5rem 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    
}

/* #projects h1 {
    font-size: 5rem;
    background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
    border-radius: 10px;
    font-weight: 700;
    text-align: center;
    padding: 2rem 0;
} */

#projects h3 {
    font-size: 2.5rem;
    color: aquamarine;
    font-weight: 700;
    text-align: center;
    padding: 2rem 0;
}




#projects p 
 {
    color: white;
    font-size: 2.5rem;
    text-decoration: none;
    transition: text-decoration 0.3s;
}

#projects a {
    color: rgb(167, 245, 255);
    font-size: 2.5rem;
    text-decoration: none;
    transition: text-decoration 0.3s;
}

#projects a:hover {
    text-decoration: underline;
}

#projects div, 
#projects span, 
#projects button {
    font-size: 1.5rem;
}

.motion-div {
    padding: 10px;
    margin: 10px;
    font-size: 1.5em; /* Standardized font size */
    cursor: pointer;
    text-align: center;
    margin-bottom: 20px;
}

.motion-div img {
    width: 650px;
    border-radius: 30px;
    height: auto;
    display: block;
    margin: 20px auto;
    
}

.gradient-heading-container {
    background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
    border-radius: 10px;
    text-align: center;
    padding: 1rem 0;
    margin: auto; /* Center the container */
    width: 100%; /* Fill the entire width of the section */
  }
  
  .gradient-heading {
    color: white;
    font-size: 5rem;
    display: inline-block; /* Allows the text to only take up as much space as it needs */
    margin: 0; /* Remove any default margin */
  }

.link-icon {
    vertical-align: middle;
}

.project-image, .project-video {
    width: 400px;
    height: auto;
}
  
.project-container {
    max-width: 80%;  /* Limits the content width to 80% */
    margin: 0 auto;  /* Centers the content horizontally */
    padding: 2rem ;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    backdrop-filter: blur(10px);
}

.github-link {
    display: flex;
    align-items: center;
    color: white;
    font-size: 1.5rem; /* Standardized font size */
    text-decoration: none;
    margin-top: 20px;
    transition: text-decoration 0.3s;
}

.github-link img {
    margin-right: 10px;
}

.github-link:hover {
    text-decoration: underline;
}
/* MyProjects.css */
.project-video-wrapper {
    position: relative;
    padding-top: 56.25%; /* 16:9 Aspect Ratio */
    height: 0;
  }
  
  .project-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
    border-radius: 30px;
  }
  ==== ./src/components/MyProjects/MyProjects.js ====
import React from 'react';

import './MyProjects.css';

export const MyProjects = ({ className }) => {
  const projects = [
    {
      id: "kindr",
      title: "Kindr",
      description: "I worked with a wonderful group of people at the School of Code to create a community-driven app called Kindr.",
      links: [
        { type: "github", url: "https://github.com/jsonandthearguments/kindr" },
        { type: "app", url: "https://kindr.netlify.app/" },
        { type: "presentation", url: "https://www.youtube.com/watch?v=Fc4mhUFAl10&ab_channel=percygr" }
      ],
      image: "images/bg1wb.png"
    }
    // ... Add other projects in a similar manner if needed
  ];
  
 

  return (
    <section id="projects" className={className}>
      <div>
      <div className='project-container'>
      <div className="gradient-heading-container">
      <h1 className='gradient-heading' >Projects</h1>
      </div>
        <div className="motion-div">
          <p>{projects[0].description}</p>

          <a href={projects[0].links.find(link => link.type === "app").url} target="_blank" rel="noopener noreferrer">
            <img src={projects[0].image} alt="Kindr Logo" className="project-image link-icon" /> 
            Kindr Website
          </a>

          
          <div className="project-video-wrapper">
            <iframe 
              title="Kindr App Presentation"
              src="https://www.youtube.com/embed/Fc4mhUFAl10"
              className="project-video"
              allowFullScreen>
            </iframe>
            <p>Kindr App presentation</p>
          </div>
    
          
        </div>

          <a href={projects[0].links.find(link => link.type === "github").url} target="_blank" rel="noopener noreferrer" className="github-link">
            <img src="images/github.png" alt="GitHub Logo" style={{width: "150px"}}/> 
            Link to the GitHub repo code
          </a>
      </div>
      </div>






    

      
    </section>
  );
};
==== ./src/components/Navbar/Navbar.css ====
/* Navbar.css */
nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: sticky;
  top: 0;
  background-color: rgb(104, 0, 178);
  padding: 10px 5%;
  z-index: 100;
}

.logo {
  height: 100px; /* Logo size increased to 100px */
  /* Removed margin-right as it may not be necessary */
}

ul {
  list-style-type: none;
  display: flex;
  gap: 15px; /* spacing between items */
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
  align-items: center; /* This will vertically center the links */
}

li a {
  color: white;
  text-decoration: none;
  transition: color 0.3s;
  font-family: 'Varela Round', sans-serif;
  font-size: 2rem;
}

li a:hover {
  color: aquamarine;
}

li a.active {
  color: #92ffff;
}

.burger {
  display: none;
  cursor: pointer;
}

.burger div {
  width: 25px;
  height: 3px;
  background-color: white;
  margin: 5px;
  transition: all 0.3s ease;
}

/* Toggle lines for burger animation */
.burger.open div:nth-child(1) {
  transform: rotate(-45deg) translate(-5px, 6px);
}

.burger.open div:nth-child(2) {
  opacity: 0;
}

.burger.open div:nth-child(3) {
  transform: rotate(45deg) translate(-5px, -6px);
}

/* Responsive */
@media (max-width: 768px) {
  .burger {
    display: block;
  }

  .nav-links {
    display: none;
    flex-direction: column;
    width: auto;
  }

  .nav-links.open {
    display: flex;
  }

  nav {
    justify-content: space-between; /* This will keep the logo on the left and the burger menu on the right */
  }

  .logo {
    height: 80px; /* Optional: Change the size on mobile if needed */
  }
}
==== ./src/components/Navbar/Navbar.js ====
import React, { useState, useEffect } from 'react';
import './Navbar.css';

export const Navbar = () => {
  const [activeItem, setActiveItem] = useState('home');
  const [burgerOpen, setBurgerOpen] = useState(false);

  const handleItemClick = (e, item) => {
    e.preventDefault();
    setActiveItem(item);
    setBurgerOpen(false);
    const target = document.getElementById(item);
    if (target) {
      target.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const toggleBurger = () => {
    console.log("Burger toggled");
    setBurgerOpen(!burgerOpen);
  };
  

  useEffect(() => {
    const sections = ['home', 'about', 'skills', 'projects', 'contact'];

    const onScroll = () => {
      let currentSection = 'home';
      for (const section of sections) {
        const element = document.getElementById(section);
        if (element) {
          const topBound = element.offsetTop;
          const bottomBound = topBound + element.offsetHeight;
          const scrollTop = window.scrollY;
          // Check if the section is in view
          if (scrollTop >= topBound && scrollTop < bottomBound) {
            currentSection = section;
            break;
          }
        }
      }
      setActiveItem(currentSection);
    };

    window.addEventListener('scroll', onScroll);
    return () => window.removeEventListener('scroll', onScroll);
  }, []);

  return (
    <nav className="navbar">
      <img src="/images/cometLogo.png" alt="Comet Logo" className="logo" />
      <div className="burger" onClick={toggleBurger}>
        <div className="line"></div>
        <div className="line"></div>
        <div className="line"></div>
      </div>
      <ul className={`nav-links ${burgerOpen ? 'open' : ''}`}>
        {['home', 'about', 'skills', 'projects', 'contact'].map((item) => (
          <li key={item}>
            <a
              href={`#${item}`}
              className={activeItem === item ? 'active' : ''}
              onClick={(e) => handleItemClick(e, item)}
            >
              {item.charAt(0).toUpperCase() + item.slice(1)} {/* Capitalize the first letter */}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  );
};

export default Navbar;
==== ./src/components/Skills/Skills.css ====
/* Skills.css */
#skills {
  position: relative;
  background-color: #1A0064;
  color: #fff;
  padding: 5rem 0;
  background-image: url('/public/images/wallpaper-earth-moon-stars.png'); 
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  background-repeat: no-repeat;
}

.content-overlay {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  font-size: 1.5rem;
  font-weight: 400;
  padding: 2rem ;
 
}

.white-block{
  background-color: rgba(255, 255, 255, 0.2);
  max-width: 60%;
  margin: 0 auto;
  backdrop-filter: blur(10px);
  border-radius: 10px;
}

#skills h1, #skills h2 {
  color: #fff;
  font-weight: 700;
  text-align: center;
  margin: 1rem 0;
}

/* #skills h1 {
  font-size: 5rem;
    background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
    border-radius: 10px;
    font-weight: 700;
    text-align: center;
    padding: 2rem 0;
} */

#skills h2 {
  font-size: 4rem;
}

#skills h3 {
  font-size: 2.5rem;
  color: aquamarine;
  margin: 1rem 0;
}

.gradient-heading-container {
  background: linear-gradient(to right, rgb(179, 0, 255), rgb(0, 140, 255));
  border-radius: 10px;
  text-align: center;
  padding: 1rem 0;
  margin: auto; /* Center the container */
  width: 100%; /* Fill the entire width of the section */
}

.gradient-heading {
  color: white;
  font-size: 5rem;
  display: inline-block; /* Allows the text to only take up as much space as it needs */
  margin: 0; /* Remove any default margin */
}


.skills-icons {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 2rem;
}

.skill {
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: transform 0.3s, filter 0.3s;
  /* cursor: pointer; */
}

.skill img {
  width: 80px;
  height: auto;
  margin-bottom: 1rem;
}

.skill:hover {
  transform: translateY(-10px) scale(1.1);
  filter: drop-shadow(0 0 20px rgb(127, 255, 212));
}

/* Floating animation for different skill groups */
.front-end-skills .skill {
  animation: float 3s ease-in-out infinite;
}

.design-skills .skill {
  animation: float 3.2s ease-in-out infinite;
}

.other-tools-skills .skill {
  animation: float 3.5s ease-in-out infinite;
}

.photography-skills .skill {
  animation: float 3.7s ease-in-out infinite;
}

/* Keyframes for floating animations */
@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}
==== ./src/components/Skills/Skills.js ====
import React from 'react';
import './Skills.css';

export const Skills = () => {
  return (
    <section id="skills">
    <div className='white-block'>
      <div className="content-overlay">
      <div className="gradient-heading-container">
        <h1 className="gradient-heading">Skills</h1>
        </div>
        <h2>Front End</h2>
        <div className="skills-icons front-end-skills"> {/* Container for front-end skills icons */}
          <div className="skill">
            <img src="images/react.png" alt="React Logo"/>
            <h4>6 months of React</h4>
          </div>
          <div className="skill">
            <img src="images/java-script.png" alt="JavaScript Logo"/>
            <h4>A year of Javascript</h4>
          </div>
          <div className="skill">
            <img src="images/html-5.png" alt="HTML5 Logo"/>
            <h4>Few years of HTML</h4>
          </div>
          <div className="skill">
            <img src="images/css-3.png" alt="CSS3 Logo"/>
            <h4>Few years of CSS</h4>
          </div>
        </div>
      </div>

      <div className="content-overlay">
        <h2>Other Skills</h2>
        <div className="skills-icons design-skills"> {/* Container for design skills icons */}
          <div className="skill">
            <img src="images/adobe.png" alt="Adobe Suite Logo"/>
            <h4>Adobe Suite</h4>
          </div>
          <div className="skill">
            <img src="images/icons8-affinity-designer-240.png" alt="Affinity Designer Logo"/>
            <h4>Affinity Designer</h4>
          </div>
          <div className="skill">
            <img src="images/icons8-affinity-photo-240.png" alt="Affinity PhotoLogo"/>
            <h4>Affinity Photo</h4>
          </div>
          <div className="skill">
            <img src="images/icons8-affinity-publisher-240.png" alt="Affinity Publisher Logo"/>
            <h4>Affinity Publisher</h4>
          </div>
        </div>
      </div>

      
      <div className="content-overlay">
        <div className="skills-icons other-tools-skills"> {/* Container for other tools skills icons */}
          <div className="skill">
            <img src="images/icons8-docker-240.png" alt="Docker Logo"/>
            <h4>Docker</h4>
          </div>
          <div className="skill">
            <img src="images/icons8-git-240.png" alt="Git Logo"/>
            <h4>Git</h4>
          </div>
          <div className="skill">
            <img src="images/trello.png" alt="Trello Logo"/>
            <h4>Trello</h4>
          </div>
        </div>
      </div>

      <div className="content-overlay">
        <div className="skills-icons photography-skills"> {/* Container for photography skills icons */}
          <div className="skill">
            <img src="images/camera.png" alt="Photography Logo"/>
            <h4>Photography</h4>
          </div>
          <div className="skill">
            <img src="images/icons8-figma-240.png" alt="Figma Logo"/>
            <h4>Figma</h4>
          </div>
        </div>
      </div>
</div>
    </section>
  );
};

export default Skills;
